name: SmallRye Build

on:
  push:
    branches:
      - 'main'
      - '[1-9].[0-9].x'
      - '1.x'
      - '!dependabot/**'
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - 'NOTICE'
      - 'README*'
  pull_request:
    branches:
      - 'main'
      - '[1-9].[0-9].x'
      - '1.x'
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - 'NOTICE'
      - 'README*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 17 ]
    name: build with jdk ${{matrix.java}}

    steps:
      - uses: actions/checkout@v2
        name: checkout

      - uses: actions/setup-java@v1.4.3
        name: set up jdk ${{matrix.java}}
        with:
          java-version: ${{matrix.java}}

      - name: maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: build with maven
        run: mvn -B formatter:validate impsort:check install -Pcoverage

      ## Store information about the build context for Sonar scan in separate job
      - name: Save Build Context
        run: echo "$GITHUB_CONTEXT" > target/build-context.json
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      ## Attach target directories for safe Sonar scan in separate job
      - name: Attach Build Output
        if: matrix.java == '11'
        uses: actions/upload-artifact@v2
        with:
          name: target
          path: |
            **/target/
            !**/target/site/apidocs/**/*
            !**/target/node/**/*
            !**/target/**/*.jar
            !**/target/**/*.war

  javadoc:
    name: verify javadocs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: checkout

      - uses: actions/setup-java@v1.4.3
        name: set up jdk
        with:
          java-version: 11

      - name: maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: generate javadocs
        run: mvn -B package javadoc:javadoc -DskipTests

  tck-reporting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - tck-version: "2.0.1"
          testng-version: "6.14.3"
          default-properties: false
        - tck-version: "3.0"
          testng-version: "6.14.3"
          default-properties: false
        - tck-version: "3.1"
          default-properties: true

    name: MicroProfile OpenAPI TCK ${{ matrix.tck-version }}
    steps:
      - uses: actions/checkout@v2
        name: checkout

      - uses: actions/setup-java@v1.4.3
        name: set up jdk
        with:
          java-version: 11

      - name: maven cache
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: build with maven
        run: mvn -B -pl '!testsuite/extra,!tools,!tools/gradle-plugin,!tools/maven-plugin,!ui,!ui/open-api-ui,!ui/open-api-ui-forms' install -DskipTests

      - name: execute specific tck
        if: ${{ matrix.default-properties == false }}
        run: mvn -B test -f testsuite/tck/pom.xml -Dsmallrye.commit=$(git rev-parse HEAD) -Dversion.eclipse.microprofile.openapi=${{ matrix.tck-version }} -Dversion.testng=${{ matrix.testng-version }}

      - name: execute default tck
        if: ${{ matrix.default-properties == true }}
        run: mvn -B test -f testsuite/tck/pom.xml -Dsmallrye.commit=$(git rev-parse HEAD)

      - uses: actions/upload-artifact@v2
        name: tck-report
        with:
          name: "tck-report-${{ matrix.tck-version }}"
          path: "testsuite/tck/target/surefire-reports/microprofile-openapi-tck-report.html"
